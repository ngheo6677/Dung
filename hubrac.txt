repeat task.wait() until game:IsLoaded()
task.wait(1)

-- Intro
loadstring(game:HttpGet("https://raw.githubusercontent.com/newbie0z-lol/intro/refs/heads/main/Protected_5021807968980637.lua"))()
task.wait(9)

-- SERVICES
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local player = game.Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VIM = game:GetService("VirtualInputManager")
local Rep = game:GetService("ReplicatedStorage")
local WS = Workspace

-- Load Fluent UI
local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/LongThanhTz12/GUI-LIBARY-SCRIPT/refs/heads/main/guilibaryscript"))()

-- Create Main Window
local Window = Fluent:CreateWindow({
    Title = "Rez Hub üíÄ | Link Discord: https://discord.gg/J3pZMNdu",
    SubTitle = "by rez",
    TabWidth = 160,
    Theme = "Dark",
    Acrylic = false,
    Size = UDim2.fromOffset(500, 320),
    MinimizeKey = Enum.KeyCode.F1
})

-- Tab --
local Tabs = {
    Info = Window:AddTab({ Title = "Tab Info", Icon = "info" }),
    Farming = Window:AddTab({ Title = "Tab Farm Lv", Icon = "leaf" }),
    Setting = Window:AddTab({ Title = "Tab Setting", Icon = "settings" }),
    ChoiDo = Window:AddTab({ Title = "Tab Ch∆°i ƒê·ªì", Icon = "rocket" }),
    Pvp = Window:AddTab({ Title = "Tab PvP", Icon = "sword" }),
    FarmTien = Window:AddTab({ Title = "Farm Ti·ªÅn", Icon = "axe" })
}
local FarmWoodTab = Tabs.FarmTien

-- Tab Info
local function createLinkButton(tab, title, url)
    tab:AddButton({
        Title = title,
        Description = "Nh·∫•n ƒë·ªÉ sao ch√©p link",
        Callback = function()
            setclipboard(url)
            Fluent:Notify({
                Title = "‚úÖ ƒê√£ sao ch√©p!",
                Content = title .. " ƒë√£ ƒë∆∞·ª£c sao ch√©p v√†o clipboard.",
                Duration = 3
            })
        end
    })
end

Tabs.Info:AddParagraph({
    Title = "‚ö†Ô∏è L∆ØU √ù",
    Content = "Nh·∫•n ph√≠m F1 ƒë·ªÉ ·∫©n / hi·ªán giao di·ªán Fluent UI.",
})

createLinkButton(Tabs.Info, "üìé Discord", "https://discord.gg/J3pZMNdu")
createLinkButton(Tabs.Info, "üìé Youtube", "https://www.youtube.com/@changbeomientay0")
createLinkButton(Tabs.Info, "üìé Tiktok", "https://www.tiktok.com/@nguyndiz")
createLinkButton(Tabs.Info, "üìé Donate", "https://create.roblox.com/dashboard/creations/experiences/6821163566/passes/1268730242/overview")

-- Tab Farming
local a = Tabs.Farming:AddButton({
	Title = "Ch·ªçn V≈© Kh√≠",
	Description = "V≈© Kh√≠ Hi·ªán T·∫°i : None",
	Callback = function()
		local weaponButtons = {}
		
		for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
			table.insert(weaponButtons, {
				Title = v.Name,
				Callback = function()
					AttackWeapon = v.Name
					print("V≈© kh√≠ ƒë√£ ch·ªçn: " .. v.Name)
				end
			})
		end

		-- Th√™m n√∫t tho√°t
		table.insert(weaponButtons, {
			Title = "‚ùå Tho√°t",
			Callback = function()
				print("ƒê√£ tho√°t ch·ªçn v≈© kh√≠.")
			end
		})

		Window:Dialog({
			Title = "Ch·ªçn V≈© Kh√≠",
			Content = "Ch·ªçn m·ªôt v≈© kh√≠:",
			Buttons = weaponButtons
		})
	end
})

spawn(function()
	while wait(1) do
		if AttackWeapon then
			a:SetDesc("V≈© Kh√≠ Hi·ªán T·∫°i : " .. AttackWeapon)
		end
	end
end)


-- Toggle AutoFarm Giang Ho 1 & 2

local Toggle2 = Tabs.Farming:AddToggle("AutoGiangHo2", {
    Title = "Auto Farm Boss",
    Default = false
})

Toggle2:OnChanged(function(Value)
    AutoFarmGiangho2 = Value
    if Value then
        pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/newbiezlol/boss/refs/heads/main/boss.txt"))()
        end)
    end
end)


local UIS = game:GetService("UserInputService")
local RepStorage = game:GetService("ReplicatedStorage")
local KnitInventoryRE = RepStorage:WaitForChild("KnitPackages")["_Index"]["sleitnick_knit@1.7.0"].knit.Services.InventoryService.RE.updateInventory


-- ‚úÖ N√∫t b·∫≠t t·∫Øt Auto Farm Qu√°i (Fluent UI)
Tabs.Farming:AddToggle("AutoFarmQuai", {
    Title = "üßü Auto Farm Qu√°i ( Dang Fix Djtme)",
    Default = false,
    Callback = function(state)
        AutoFarmGiangho = state
        end
})




-- ‚öôÔ∏è Bi·∫øn toggle
local AutoBangGac = false
local CanUseBandage = true -- ch·ªëng spam

-- ü©π Toggle b·∫≠t t·∫Øt auto bƒÉng g·∫°c
Tabs.Farming:AddToggle("AutoBangGac", {
    Title = "üíâ Auto BƒÉng G·∫°c (HP < 40)",
    Default = false,
    Callback = function(state)
        AutoBangGac = state
        Fluent:Notify({
            Title = "üíâ Auto BƒÉng G·∫°c",
            Content = state and "ƒê√£ b·∫≠t t·ª± h·ªìi m√°u khi HP < 40." or "ƒê√£ t·∫Øt t·ª± h·ªìi m√°u.",
            Duration = 3
        })
    end
})

-- üì¶ L·∫•y l·∫°i bƒÉng g·∫°c n·∫øu m·∫•t
local function GetBackpack(itemName)
    local success, err = pcall(function()
        local Knit = game:GetService("ReplicatedStorage"):WaitForChild("KnitPackages")
            :WaitForChild("_Index"):WaitForChild("sleitnick_knit@1.7.0")
            :WaitForChild("knit")
        local RE = Knit.Services.InventoryService.RE.updateInventory

        RE:FireServer("refresh")
        task.wait(1)
        RE:FireServer("eue", itemName)
    end)
    if not success then
        warn("‚ùå L·ªói khi l·∫•y l·∫°i bƒÉng g·∫°c:", err)
    end
end

-- ‚ù§Ô∏è V√≤ng l·∫∑p ki·ªÉm tra m√°u v√† t·ª± d√πng bƒÉng
spawn(function()
    while task.wait(1) do
        if AutoBangGac and CanUseBandage then
            local char = game.Players.LocalPlayer.Character
            local humanoid = char and char:FindFirstChild("Humanoid")
            local backpack = game.Players.LocalPlayer:FindFirstChild("Backpack")

            if humanoid and humanoid.Health < 40 then
                CanUseBandage = false -- kh√≥a spam trong v√†i gi√¢y

                -- L·∫•y bƒÉng n·∫øu ch∆∞a c√≥
                if not backpack:FindFirstChild("bƒÉng g·∫°c") then
                    GetBackpack("bƒÉng g·∫°c")
                    task.wait(1.5)
                end

                -- D√πng bƒÉng g·∫°c n·∫øu c√≥
                if backpack:FindFirstChild("bƒÉng g·∫°c") then
                    local tool = backpack:FindFirstChild("bƒÉng g·∫°c")
                    pcall(function()
                        tool.Parent = char
                        task.wait(0.5)
                        humanoid:EquipTool(tool)
                        task.wait(0.5)
                        tool:Activate()
                    end)
                end

                -- Ch·ªù cho h·ªìi m√°u √≠t nh·∫•t l√™n 70 r·ªìi m·ªõi cho d√πng ti·∫øp
                repeat task.wait(1) until humanoid.Health > 70 or not AutoBangGac
                task.wait(2)
                CanUseBandage = true
            end
        end
    end
end)




-- Tab Fps --
local fpsLabel -- ƒê·ªÉ l∆∞u label hi·ªÉn th·ªã FPS
local fpsConnection -- K·∫øt n·ªëi c·∫≠p nh·∫≠t FPS

Tabs.Setting:AddToggle("ShowFPS", {
    Title = "üéØ Hi·ªán FPS",
    Default = false,
    Callback = function(state)
        if state then
            -- T·∫°o FPS Label
            local gui = Instance.new("ScreenGui", game.CoreGui)
            gui.Name = "FPSDisplay"

            fpsLabel = Instance.new("TextLabel", gui)
            fpsLabel.Size = UDim2.new(0, 100, 0, 30)
            fpsLabel.Position = UDim2.new(1, -110, 0, 10)
            fpsLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            fpsLabel.TextColor3 = Color3.new(1, 1, 1)
            fpsLabel.TextSize = 18
            fpsLabel.Text = "FPS: ..."
            fpsLabel.BorderSizePixel = 0
            fpsLabel.BackgroundTransparency = 0.2
            fpsLabel.Font = Enum.Font.SourceSansBold

            -- H√†m c·∫≠p nh·∫≠t FPS
            local lastUpdate = tick()
            local frames = 0

            fpsConnection = game:GetService("RunService").RenderStepped:Connect(function()
                frames += 1
                local now = tick()
                if now - lastUpdate >= 1 then
                    local fps = math.floor(frames / (now - lastUpdate))
                    fpsLabel.Text = "FPS: " .. fps
                    lastUpdate = now
                    frames = 0
                end
            end)
        else
            if fpsConnection then
                fpsConnection:Disconnect()
                fpsConnection = nil
            end
            if fpsLabel then
                fpsLabel:Destroy()
                fpsLabel = nil
            end
            local oldGui = game.CoreGui:FindFirstChild("FPSDisplay")
            if oldGui then oldGui:Destroy() end
        end
    end
})

Tabs.Setting:AddButton({
    Title = "‚ö° TƒÉng FPS",
    Description = "Gi·∫£m ch·∫•t l∆∞·ª£ng ƒë·ªì h·ªça xu·ªëng m·ª©c th·∫•p nh·∫•t",
    Callback = function()
        settings().Rendering.QualityLevel = Enum.QualityLevel.Level01
        Fluent:Notify({
            Title = "‚ö° FPS Boost!",
            Content = "ƒê√£ gi·∫£m ch·∫•t l∆∞·ª£ng ƒë·ªì h·ªça xu·ªëng m·ª©c th·∫•p nh·∫•t ƒë·ªÉ tƒÉng FPS.",
            Duration = 4
        })
    end
})

Tabs.Setting:AddButton({
    Title = "üñ§ M√†n H√¨nh Tr·∫Øng ƒêen",
    Description = "B·∫≠t hi·ªáu ·ª©ng tr·∫Øng ƒëen to√†n m√†n h√¨nh (ƒëen tr·∫Øng retro)",
    Callback = function()
        local lighting = game:GetService("Lighting")

        -- Ki·ªÉm tra n·∫øu ƒë√£ c√≥ effect r·ªìi th√¨ x√≥a
        local oldEffect = lighting:FindFirstChild("Tr·∫Øngƒêen")
        if oldEffect then
            oldEffect:Destroy()
            Fluent:Notify({
                Title = "üåà M√†u Tr·ªü L·∫°i!",
                Content = "ƒê√£ t·∫Øt ch·∫ø ƒë·ªô tr·∫Øng ƒëen.",
                Duration = 3
            })
        else
            -- Th√™m effect m·ªõi
            local cc = Instance.new("ColorCorrectionEffect")
            cc.Name = "Tr·∫Øngƒêen"
            cc.Saturation = -1
            cc.Contrast = 0.1
            cc.Brightness = 0
            cc.Parent = lighting

            Fluent:Notify({
                Title = "üñ§ Tr·∫Øng ƒêen ƒê√£ B·∫≠t!",
                Content = "M√†n h√¨nh c·ªßa b·∫°n gi·ªù l√† tr·∫Øng ƒëen to√†n t·∫≠p üòé",
                Duration = 4
            })
        end
    end
})

Tabs.Setting:AddButton({
    Title = "‚ú® B·∫≠t RTX Flash BAng!",
    Description = "Kh√¥ng Ph√∫ H·ª£p Cho Ng∆∞·ªùi Tr·ªën Ch∆°i ƒê√™m",
    Callback = function()
        -- L√†m part b√≥ng
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and not part:IsA("Terrain") then
                part.Material = Enum.Material.SmoothPlastic
                part.Reflectance = 0.2
                part.Transparency = 0
            end
        end

        -- Hi·ªáu ·ª©ng √°nh s√°ng
        local lighting = game:GetService("Lighting")
        lighting.Brightness = 3
        lighting.GlobalShadows = true
        lighting.EnvironmentDiffuseScale = 1
        lighting.EnvironmentSpecularScale = 1

        local function createOnce(name, class, props)
            if lighting:FindFirstChild(name) then lighting[name]:Destroy() end
            local inst = Instance.new(class)
            inst.Name = name
            for prop, val in pairs(props) do inst[prop] = val end
            inst.Parent = lighting
        end

        createOnce("RTX_Sun", "SunRaysEffect", {
            Intensity = 0.15,
            Spread = 0.2
        })

        createOnce("RTX_Bloom", "BloomEffect", {
            Intensity = 1,
            Size = 100,
            Threshold = 0.9
        })

        createOnce("RTX_CC", "ColorCorrectionEffect", {
            Saturation = 0.3,
            Contrast = 0.2,
            Brightness = 10
        })

        Fluent:Notify({
            Title = "‚ú® RTX Flash Bang!",
            Content = "ƒêeo K√≠nh V√¥ ƒêi B√© üòé",
            Duration = 5
        })
    end
})


Tabs.Setting:AddButton({
    Title = "üì∂ T·ªëi ∆Øu Ping",
    Description = "·∫®n hi·ªáu ·ª©ng + gi·∫£m t·∫£i m·∫°ng client",
    Callback = function()
        -- T·∫Øt Light v√† ParticleEmitter
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("ParticleEmitter") or v:IsA("Light") or v:IsA("Trail") then
                v.Enabled = false
            end
        end

        -- T·∫Øt Shadows v√† gi·∫£m ch·∫•t l∆∞·ª£ng Terrain (n·∫øu c√≥)
        if workspace:FindFirstChildOfClass("Terrain") then
            workspace.Terrain.WaterWaveSize = 0
            workspace.Terrain.WaterReflectance = 0
        end

        settings().Rendering.ReloadAssets = true

        Fluent:Notify({
            Title = "üì∂ Ping Optimization",
            Content = "ƒê√£ ·∫©n hi·ªáu ·ª©ng v√† gi·∫£m t·∫£i ƒë·ªÉ t·ªëi ∆∞u ping.",
            Duration = 4
        })
    end
})

Tabs.Setting:AddButton({
    Title = "üßΩ X√≥a T·∫•t C·∫£ Hi·ªáu ·ª®ng",
    Description = "X√≥a s·∫°ch to√†n b·ªô hi·ªáu ·ª©ng √°nh s√°ng, bloom, tr·∫Øng ƒëen, RTX, blur...",
    Callback = function()
        local lighting = game:GetService("Lighting")

        for _, v in pairs(lighting:GetChildren()) do
            if v:IsA("ColorCorrectionEffect")
            or v:IsA("BloomEffect")
            or v:IsA("SunRaysEffect")
            or v:IsA("BlurEffect")
            or v:IsA("DepthOfFieldEffect") then
                v:Destroy()
            end
        end

        Fluent:Notify({
            Title = "üßπ D·ªçn S·∫°ch Hi·ªáu ·ª®ng!",
            Content = "T·∫•t c·∫£ hi·ªáu ·ª©ng h√¨nh ·∫£nh ƒë√£ b·ªã xo√° kh·ªèi Lighting.",
            Duration = 4
        })
    end
})


-- Tab Ch∆°i ƒê·ªì
Tabs.ChoiDo:AddButton({
    Title = "‚úàÔ∏è Bay Bay",
    Description = "Ch·∫°y script bay",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
    end
})

Tabs.ChoiDo:AddToggle("HitboxRucRo", {
    Title = "üåü Hitbox",
    Default = false,
    Callback = function(state)
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= LocalPlayer then
                local char = p.Character
                if char then
                    for _, partName in ipairs({ "Head", "HumanoidRootPart", "Torso" }) do
                        local part = char:FindFirstChild(partName)
                        if part and part:IsA("BasePart") then
                            if state then
                                part.Size = Vector3.new(15, 15, 15)
                                part.Material = Enum.Material.SmoothPlastic
                                part.Color = Color3.fromRGB(255, 255, 255)
                                part.Transparency = 0.8
                                part.Anchored = false
                                part.CanCollide = false
                            else
                                part.Size = Vector3.new(2, 2, 1)
                                part.Material = Enum.Material.Plastic
                                part.Color = Color3.fromRGB(163, 162, 165)
                                part.Transparency = 0
                            end
                        end
                    end
                end
            end
        end
    end
})

local Lighting = game:GetService("Lighting")
local RainbowEffect = false
local RainbowBlur = nil
local RainbowColor = nil

Tabs.ChoiDo:AddToggle("ToggleRainbowEffect", {
    Title = "üåà ·∫¢o gi√°c c·∫ßu v·ªìng",
    Default = false,
    Description = "Hi·ªáu ·ª©ng 7 s·∫Øc c·∫ßu v·ªìng tr√™n m√†n h√¨nh"
}):OnChanged(function(Value)
    RainbowEffect = Value

    if not Value then
        -- Xo√° hi·ªáu ·ª©ng n·∫øu c√≥
        if RainbowBlur then
            RainbowBlur:Destroy()
            RainbowBlur = nil
        end
        if RainbowColor then
            RainbowColor:Destroy()
            RainbowColor = nil
        end
    end
end)

-- Hi·ªáu ·ª©ng ƒë·ªïi m√†u li√™n t·ª•c
task.spawn(function()
    local hue = 0
    while true do
        task.wait(0.1)

        if RainbowEffect then
            -- T·∫°o Blur n·∫øu ch∆∞a c√≥
            if not RainbowBlur then
                RainbowBlur = Instance.new("BlurEffect")
                RainbowBlur.Size = 8 -- ho·∫∑c 12 tu·ª≥ b·∫°n
                RainbowBlur.Name = "RainbowBlur"
                RainbowBlur.Parent = Lighting
            end

            -- T·∫°o ColorCorrection n·∫øu ch∆∞a c√≥
            if not RainbowColor then
                RainbowColor = Instance.new("ColorCorrectionEffect")
                RainbowColor.Name = "RainbowColor"
                RainbowColor.Saturation = 1
                RainbowColor.Contrast = 0.2
                RainbowColor.Parent = Lighting
            end

            -- ƒê·ªïi m√†u c·∫ßu v·ªìng li√™n t·ª•c
            hue = (hue + 3) % 360
            local color = Color3.fromHSV(hue / 360, 1, 1)
            RainbowColor.TintColor = color
        end
    end
end)

local Toggle3 = Tabs.Pvp:AddToggle("Script PvP", {
    Title = "Script PvP",
    Default = false 
})

Toggle3:OnChanged(function(Value)
    if Value then
        pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/newbiezlol/pvp/refs/heads/main/pvp.txt"))()
        end)
    end
end)

--// ========================== TI·ªÜN √çCH CHUNG ================================
--- ANTI AFK 20 PH√öT
spawn(function()
	local vu = game:GetService("VirtualUser")
	player.Idled:Connect(function()
		vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera and workspace.CurrentCamera.CFrame or CFrame.new())
		task.wait(1)
		vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera and workspace.CurrentCamera.CFrame or CFrame.new())
	end)
end)

---------------------------------------------------------------------------------------
-- SERVICES
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local VIM = game:GetService("VirtualInputManager")
local Rep = game:GetService("ReplicatedStorage")
local WS = Workspace


local FarmWoodTab = Tabs.FarmTien

-- Bay t·ªõi c√¢y b·∫±ng Tween
local function flyToPosition(part, offset, speed)
	local destination = part.Position + offset
	local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
	if not (hrp and part) then return end

	local distance = (hrp.Position - destination).Magnitude
	local tweenTime = math.clamp(distance / speed, 0.3, 3)
	local tweenInfo = TweenInfo.new(tweenTime, Enum.EasingStyle.Linear)
	local goal = { CFrame = CFrame.new(destination) }
	local tween = TweenService:Create(hrp, tweenInfo, goal)
	tween:Play()
	tween.Completed:Wait()
end

-- Equip Axe
local toolName = "R√¨u"
local runningAxeLoop = false
local function PurchaseAxe()
	local invGui = player:WaitForChild("PlayerGui").Inventory.MainFrame.Container.Main.ToolList.ScrollingFrame
	if not invGui:FindFirstChild(toolName) then
		local shopService = Rep.KnitPackages._Index["sleitnick_knit@1.7.0"].knit.Services.ShopService.RE.buyItem
		shopService:FireServer(toolName, 99)
		task.wait(1)
	end
end
local function RequestToolFromServer()
	local invService = Rep.KnitPackages._Index["sleitnick_knit@1.7.0"].knit.Services.InventoryService.RE.updateInventory
	invService:FireServer("eue", toolName)
end
local function CheckAndEquipAxe()
	local char = player.Character
	local backpack = player:FindFirstChild("Backpack")
	local humanoid = char and char:FindFirstChildOfClass("Humanoid")
	if not (char and humanoid and backpack) then return end
	local currentTool = char:FindFirstChildOfClass("Tool")
	local axeInBackpack = backpack:FindFirstChild(toolName)
	if (not currentTool or currentTool.Name ~= toolName) and not axeInBackpack then
		RequestToolFromServer()
		task.wait(0.5)
		axeInBackpack = backpack:FindFirstChild(toolName)
		if not axeInBackpack then
			PurchaseAxe()
			axeInBackpack = backpack:FindFirstChild(toolName)
		end
	end
	if axeInBackpack then
		humanoid:EquipTool(axeInBackpack)
	end
end
local function StartAutoEquipLoop()
	if runningAxeLoop then return end
	runningAxeLoop = true
	task.spawn(function()
		while _G.AutoEquipAxe do
			CheckAndEquipAxe()
			task.wait(0.1)
		end
		runningAxeLoop = false
	end)
end

-- Arrow minigame
local rotationToKey = { [0]=Enum.KeyCode.Right, [90]=Enum.KeyCode.Down, [180]=Enum.KeyCode.Left, [270]=Enum.KeyCode.Up }
local function normalizeRotation(rot)
	return (math.floor((rot % 360) / 90 + 0.5) * 90) % 360
end
local function doArrowSequence()
	local gui = player:WaitForChild("PlayerGui").ArrowMinigame.Arrow.List
	for i = 1, 5 do
		local frame = gui:FindFirstChild(tostring(i))
		local img = frame
 